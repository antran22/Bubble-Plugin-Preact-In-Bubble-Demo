diff --git a/node_modules/@prefresh/core/src/index.js b/node_modules/@prefresh/core/src/index.js
index ca481c8..6c80ef4 100644
--- a/node_modules/@prefresh/core/src/index.js
+++ b/node_modules/@prefresh/core/src/index.js
@@ -54,7 +54,7 @@ function replaceComponent(OldType, NewType, resetHookState) {
   pendingUpdates = pendingUpdates.filter(p => p[0] !== OldType);
 
   vnodes.forEach(vnode => {
-    if (!vnode.__c.__P) return;
+    if (!vnode.__c || !vnode.__c.__P) return;
     // update the type in-place to reference the new component
     vnode.type = NewType;
 
diff --git a/node_modules/@prefresh/core/src/runtime/vnode.js b/node_modules/@prefresh/core/src/runtime/vnode.js
index 01c77d5..ca4fb35 100644
--- a/node_modules/@prefresh/core/src/runtime/vnode.js
+++ b/node_modules/@prefresh/core/src/runtime/vnode.js
@@ -1,18 +1,17 @@
-import { options } from 'preact';
-import { vnodesForComponent, mappedVNodes } from './vnodesForComponent';
-import { VNODE_COMPONENT } from '../constants';
+import { options } from "preact";
+import { vnodesForComponent, mappedVNodes } from "./vnodesForComponent";
+import { VNODE_COMPONENT } from "../constants";
 
-const getMappedVnode = type => {
+const getMappedVnode = (type) => {
   if (mappedVNodes.has(type)) {
     return getMappedVnode(mappedVNodes.get(type));
   }
-
   return type;
 };
 
 const oldVnode = options.vnode;
-options.vnode = vnode => {
-  if (vnode && typeof vnode.type === 'function') {
+options.vnode = (vnode) => {
+  if (vnode && typeof vnode.type === "function") {
     const vnodes = vnodesForComponent.get(vnode.type);
     if (!vnodes) {
       vnodesForComponent.set(vnode.type, [vnode]);
@@ -33,7 +32,7 @@ options.vnode = vnode => {
     vnode.type = foundType;
     if (
       vnode[VNODE_COMPONENT] &&
-      'prototype' in vnode.type &&
+      "prototype" in vnode.type &&
       vnode.type.prototype.render
     ) {
       vnode[VNODE_COMPONENT].constructor = vnode.type;
@@ -44,13 +43,13 @@ options.vnode = vnode => {
 };
 
 const oldDiffed = options.diffed;
-options.diffed = vnode => {
-  if (vnode && typeof vnode.type === 'function') {
+options.diffed = (vnode) => {
+  if (vnode && typeof vnode.type === "function") {
     const vnodes = vnodesForComponent.get(vnode.type);
     if (vnodes) {
-      const matchingDom = vnodes.filter(p => p.__c === vnode.__c);
+      const matchingDom = vnodes.filter((p) => p.__c === vnode.__c);
       if (matchingDom.length > 1) {
-        const i = vnodes.findIndex(p => p === matchingDom[0]);
+        const i = vnodes.findIndex((p) => p === matchingDom[0]);
         vnodes.splice(i, 1);
       }
     }
